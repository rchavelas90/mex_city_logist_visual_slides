format(today, format="%B %d %y")
format(today, format="%d-%B-%y")
format(today, format="%d-%B-%Y")
format(today, format="%d-%m-%Y")
today
today <- Sys.Date()
today
strDates <- c("01/05/1965", "08/16/1975")
dates <- as.Date(strDates, "%m/%d/%Y")
dates
dates <- as.Date(strDates, "%m/%d/%Y")
strDates <- c("01/05/1965", "08/16/1975")
strDates
mydates <- as.Date(c("2007-06-22", "2004-02-13"))
mydates
strDates <- as.character(dates)
strDates
dates
mydata$sum <- mydata$x1 + mydata$x2
mydata
edit(mydata)
mydata
mydata[1]
mydata[1,1]
43<-mydata[1,1]
age <- c(43, 30, 56)
age <- c(43, 30, 56)
gender <- c("male", "female", "male")
weight <- c(160, 110, 220)
mydata <- data.frame(age,gender,weight)
mydata
mydata$sum <- mydata$x1 + mydata$x2
help($)
help($)
mydata
mydata <- data.frame(x1,gender,weight)
x1 <- c(43, 30, 56)
mydata <- data.frame(x1,gender,weight)
mydata$x1
mydata
x1 <- c(43, 30, 56)
x2 <- c("male", "female", "male")
mydata <- data.frame(x1,x2)
mydata
mydata$x1
mydata$x2
mydata$sum <- mydata$x1 + mydata$x2
x2 <- c(2,3,1)
x1 <- c(43, 30, 56)
mydata <- data.frame(x1,x2)
mydata
mydata$x2
mydata$sum <- mydata$x1 + mydata$x2
sum
mydata
mydata$mean <- (mydata$x1 + mydata$x2)/2
mydata
# create a data frame from scratch
x1 <- c(43, 30, 56)
x2 <- c(2,3,1)
mydata <- data.frame(x1,x2)
mydata
mydata$x2
x1 <- c(43, 30, 56)
x2 <- c(2,3,1)
mydata <- data.frame(x1,x2)
mydata
attach(mydata)
mydata$sum <- x1 + x2
mydata$mean <- (x1 + x2)/2
detach(mydata)
mydata
x1 <- c(43, 30, 56)
x2 <- c(2,3,1)
mydata <- data.frame(x1,x2)
mydata
attach(mydata)
help(attach)
attach(mydata)
mydata$sum <- x1 + x2
mydata$mean <- (x1 + x2)/2
detach(mydata)
x1 <- c(43, 30, 56)
x2 <- c(2,3,1)
mydata <- data.frame(x1,x2)
mydata
fix(age)
View(mydata)
View(mydata)
View(z)
View(z)
View(mydata)
fix(`x1`)
fix(`x2`)
mydata <- data.frame(x1,x2)
mydata
)
mydata <- transform( mydata,
sum = x1 + x2,
mean = (x1 + x2)/2
)
mydata
# create a data frame from scratch
x1 <- c(43, 30, 56)
x2 <- c(2,3,1)
mydata <- data.frame(x1,x2)
mydata
# create a data frame from scratch
x1 <- c(43, 30, 56)
x2 <- c(2,3,1)
mydata <- data.frame(x1,x2)
mydata
mydata$agecat <- ifelse(mydata$age > 70,
mydata$agecat <- ifelse(mydata$age > 70,
c("older"), c("younger"))
mydata
mydata
# create a data frame from scratch
agecat <- c(43, 30, 56)
x2 <- c(2,3,1)
mydata <- data.frame(x1,x2)
mydata
mydata <- data.frame(agecat,x2)
mydata
mydata <- data.frame(agecat,age)
age <- c(2,3,1)
mydata <- data.frame(agecat,age)
mydata
agecate <- c(43, 30, 56)
mydata <- data.frame(agecate,age)
mydata$agecat <- ifelse(mydata$age > 70,
mydata
mydata$agecat <- ifelse(mydata$age > 70,
c("older"), c("younger"))
mydata
mydata$agecat <- ifelse(mydata$age > 30,
c("older"), c("younger"))
mydata
age <- c(29,30,31)
mydata <- data.frame(agecate,age)
mydata
mydata$agecat <- ifelse(mydata$age > 30,
mydata$agecat <- ifelse(mydata$age > 30,
c("older"), c("younger"))
mydata
age <- c(29,31,31)
mydata$agecat <- ifelse(mydata$age > 30,
mydata
mydata$agecat <- ifelse(mydata$age > 30,
mydata$agecat <- ifelse(mydata$age > 30,
c("older"), c("younger"))
mydata
agecate <- c(43, 30, 56)
agecat <- c(43, 30, 56)
age <- c(29,31,31)
mydata <- data.frame(agecat,age)
mydata
mydata$agecat <- ifelse(mydata$age > 30,
c("older"), c("younger"))
mydata
# create a data frame from scratch
agecat <- c(43, 30, 56)
age <- c(29,31,31)
mydata <- data.frame(agecat,age)
mydata
attach(mydata)
mydata$agecat[age > 75] <- "Elder"
mydata$agecat[age > 45 & age <= 75] <- "Middle Aged"
mydata$agecat[age <= 45] <- "Young"
detach(mydata)
mydata
agecat <- c(43, 30, 56)
age <- c(76,50,40)
mydata <- data.frame(agecat,age)
mydata
attach(mydata)
mydata$agecat[age > 75] <- "Elder"
mydata$agecat[age > 45 & age <= 75] <- "Middle Aged"
mydata$agecat[age <= 45] <- "Young"
detach(mydata)
mydata
fix(mydata) # results are saved on close
library(reshape)
names(mydata)
names(mydata) <- c("x1","age","y", "ses")
names(mydata) <- c("x1","y")
mydata
x <- c(1:10)
x
x[(x>8) | (x<5)]
fix(today)
fix(mydates)
x>8
x>8
abs(x)
sqrt(x)
abs(sqrt(x))
ceiling(sqrt(x))
x <- "abcdef"
substr(x, 2, 4)
x
substr(x, 2, 4) is "bcd"
substr(x, 2, 4)
substr(x, 2, 4) <- "22222"
x
sub("\\s",".","Hello There") returns "Hello.There"
sub("\\s",".","Hello There") returns "Hello.There"
sub("\\",".","Hello There") returns "Hello.There"
sub("\\",".","Hello There")
sub("\\s",".","Hello There")
grep("A", c("b","A","c"), fixed=TRUE)
paste("x",1:3,sep="")
paste("x",1:3,sep=,)
paste("x",1:3,sep=",")
paste("x",1:3,sep="")
paste("x",1:4,sep="")
x<-paste("x",1:4,sep="")
x<-xpaste("x",1:4,sep="")
x<-paste("x",1:4,sep="")
x
x<-c(paste("x",1:4,sep=""))
x
paste("Today is", date())
x <- pretty(c(-3,3), 30)
y <- dnorm(x)
plot(x, y, type='l', xlab="Normal Deviate", ylab="Density", yaxs="i")
plot(x, y, type='l', xlyab="Normal Deviate", ylab="Density", yaxs="i")
y
yx
x
help(pretty)
plot(x, y, type='l', xlab="Normal Deviate", ylab="Density", yaxs="i")
x
x <- pretty(c(-3,3), 40)
y <- dnorm(x)
plot(x, y, type='l', xlab="Normal Deviate", ylab="Density", yaxs="i")
x <- pretty(c(-3,3), 40)
y <- dnorm(x)
x
x <- pretty(c(-3,3), 80)
x
y <- dnorm(x)
plot(x, y, type='l', xlab="Normal Deviate", ylab="Density", yaxs="i")
help.start()
data()
women
volcano
uspop
library(boot)
lm(mpg~wt, data=mtcars)
fit <- lm(mpg~wt, data=mtcars)
str(fit) # view thplot(fit$residuals, fit$fitted.values)
plot(fit$residuals, fit$fitted.values)
help(lm)
plot(fit)
mtcars
a <- c(1,2,5.3,6,-2,4) # numeric vector
b <- c("one","two","three") # character vector
c <- c(TRUE,TRUE,TRUE,FALSE,TRUE,FALSE) #logical vector
a[c(2,4)] # 2nd and 4th elements of vector
# generates 5 x 4 numeric matrix
x<-matrix(1:20, nrow=5,ncol=4,byrow=TRUE)
rstudio::viewData(x)
rstudio::viewData(x)
x
# another example
cells <- c(1,26,24,68)
rnames <- c("R1")
cnames <- c("C1", "C2","C3","C4")
mymatrix <- matrix(cells, nrow=1, ncol=4, byrow=TRUE,
dimnames=list(rnames, cnames))
mymatrix
x[,4] # 4th column of matrix
x[3,] # 3rd row of matrix
x[2:4,1:3] # rows 2,3,4 of columns 1,2,3
d <- c(1,2,3,4)
e <- c("red", "white", "red", NA)
f <- c(TRUE,TRUE,TRUE,FALSE)
mydata <- data.frame(d,e,f)
names(mydata) <- c("ID","Color","Passed") # variable names
mydata
mydata[1:2] # columns 3,4,5 of data frame
mydata[c("ID","Color")] # columns ID and Age from data frame
# example of a list with 4 components -
# a string, a numeric vector, a matrix, and a scaler
mylist <- list(name="Fred", mynumbers=a, mymatrix=x, age=5.3)
mylist
# example of a list containing two lists
v <- c(list1,list2)
mylist[[2]] # 2nd component of the list
mylist[["mynumbers"]] # component named mynumbers in list
# variable gender with 20 "male" entries and
# 30 "female" entries
gender <- c(rep("male",20), rep("female", 30))
gender <- factor(gender)
# stores gender as 20 1s and 30 2s and associates
# 1=female, 2=male internally (alphabetically)
# R now treats gender as a nominal variable
summary(gender)
gender
## replicate a list
fred <- list(happy = 1:10, name = "squash")
rep(fred, 5)
fred
# variable rating coded as "large", "medium", "small'
rating <- factor(rating)
# recodes rating to 1,2,3 and associates
help.start()
ls()
years <- list(Kennedy=1960,Johnson=1964,Carter=1976,Clinton=1994)
years[["Kennedy"]]
years$kennedy
years$Kennedy
years[c("Kennedy","Johnson")]
years["Carter"]
lst <- list(
far.left=0.023,
left=0.159,
mid=0.5,
right=0.841,
far.right=0.977)
lst
lst <- list()
lst$far.left=0.023,
lst$left=0.159,
lst$far.left <- 0.023,
lst <- list()
lst$far.left <- 0.023,
lst$far.left = 0.023
lst$left=0.159
lst$mid=0.5
lst$right=0.841
lst$far.right=0.977
lst
values <- pnorm(-2:2)
names <- c("far.left","left","mid","right","far.right")
lst <- list()
lst[names] <- values
lst
cat("the left limit is",lst$left,"\n")
cat("the rigth limit is",lst$right,"\n")
for (nm in names(lst)) cat("The",nm,"limit is",lst$nm,"\n")
for (nm in names(lst)) cat("The",nm,"limit is",lst[[nm]],"\n")
years
years[["Johnson"]] <- NULL
years
years[c("Carter",Clinton)] <- NULL
years[c("Carter","Clinton")] <- NULL
years
iq.scores <- list(109,103,101,110,120,110)
iq.scores
iq.vec <- unlist(iq.scores)
iq.vec
iq.scores <- list(fir=109,sec=103,tir=101,for=110,fif=120,sixt=110)
iq.scores <- list(fir=109,sec=103,tir=101,fo=110,fif=120,sixt=110)
iq.scores
iq.vec <- unlist(iq.scores)
iq.vec
mean(iq.vec)
mean(iq.scores)
mean(iq.vec)
cat(iq.scores,"\n")
cat(iq.vec,"\n")
cat("IQ Scores:",iq.vec,"\n")
lst <- list("Moe",NULL,"Curly")
lst
lst[sapply(lst,is.null)] <- NULL
lst
lst <- list(-3,-2,-1,-.5,0,1,2,3)
lst
lst[lst<0] <- NULL
lst
lst <- list(-3,-2,-1,-.5,0,1,2,3)
lst
lst[lst==0] <- NULL
lst
lst <- list(-3,-2,-1,-.5,0,1,2,3)
lst <- list(-3,-2,-1,-.5,NA,0,1,2,3)
lst
lst[lst<0] <- NULL
lst
lst <- list(-3,-2,-1,-.5,NA,0,1,2,3)
lst
lst[lst<0] <- NULL
lst
lst <- list(-3,-2,-1,-.5,NA,0,1,2,3)
lst
lst[lst==0] <- NULL
lst
lst <- list(-3,-2,-1,-.5,NA,0,1,2,3)
lst[abs(lst)<1] <- NULL
lst[abs(unlist(lst))<1] <- NULL
lst
lst <- list(-3,-2,-1,-.5,NA,0,1,2,3)
unlist(lst)
unlist(lst)<1
abs(unlist(lst))<1
,
lst <- list(-3,-2,-1,-.5,NA,0,1,2,3)
lst[lapply(lst,abs)<1] <- NULL
lst
?lm
theData <- c(1.1,1.2,2.1,2.2,3.1,3.2)
mat <- matrix(theData,2,3)
mat
matrix(0,2,3)
matrix(NA,2,3)
mat <- matrix(c(1.1,1.2,2.1,2.2,3.1,3.2),2,3)
mat
theData <- c(1.1,1.2,1.3,
2.1,2.2,2.3)
mat <- matrix(theData,2,3,byrow=T)
mat
mat <- matrix(c(1.1,1.2,1.3,
2.1,2.2,2.3),
2,3,byrow=T)
mat
v <- c(1.1,1.2,1.3,2.1,2.2,2.3)
v
dim(v) <- c(2,3)
v
t(v)
mat <- matrix(c(1.1,1.2,1.3,
2.1,2.2,2.3),
2,3,byrow=T)
t(v)
v
v*v
v*t(v)
v%*%t(v)
mat <- matrix(c(1.1,1.2,1.3,
2.1,2.2,2.3),
2,3,byrow=T)
mat
mat%*%t(mat)
mat%*%solve(mat)
solve(mat)
diag(4)
mat
mat%*%t(mat)
t(mat)%*%mat
tech.corr
tech.corr <- c(1,.556,.39,.556,1,.444,.39,.444,1)
dim(tech.corr) <- c(3,3)
tech.corr
tech.corr <- c(1,.556,.39,.556,1,.444,.39,.444,1)
matrix(tech.corr,3,3)
tech.corr <- matrix(tech.corr,3,3)
tech.corr
colnames(tech.corr) <- c("IBM","MSFT","GOOG")
rownames(tech.corr) <- c("IBM","MSFT","GOOG")
tech.corr
tech.corr["IBM","MSFT"]
dat <-  c(1,4,7,10,1,2,8,9,1,2,9,3)
matrix(dat,4,3)
matrix(dat,4,3,byrow=T)
matrix(dat,3,4,byrow=T)
mat[1,]
mat <- matrix(dat,3,4,byrow=T)
mat[1,]
mat[,3]
mat[1,,drop=F]
mat[,3,drop=F]
mat[,3,drop=F]?do.call
?do.call
do.call(lst)
do.call(print,lst)
do.call(,lst)
do.call(summary,lst)
lst
do.call(cat,lst)
unlist(lst)
do.call(cat,lst)
unlist(lst)
do.call(cat,lst)
unlist(lst)
class(do.call(cat,lst))
a <- do.call(cat,lst)
a
lst
a <- do.call(cat,lst)
a
a <- do.call(cat,lst)
?Map
install.packages("knitr")
install.packages("markdown")
library(knitr)
library(markdown)
install.packages("devtools")
library(devtools)
install_github('slidify', 'ramnathv')
install_github('slidifyLibraries', 'ramnathv')
library(slidify)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library(knitr)
library(markdown)
library(devtools)
library(slidify)
library(knitr)
library(markdown)
library(devtools)
library(slidify)
library(knitr)
library(markdown)
library(devtools)
library(slidify)
setwd("GitLocal/mex_city_logist_visual_slides")
setwd("Mex_visual")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
